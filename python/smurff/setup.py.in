from setuptools import setup, Extension
from setuptools.command.build_ext import build_ext

import os
import shutil
import sys
import subprocess

if os.path.exists('CMakeLists.txt'):
    print("The setup.py script should be executed from the build directory.")
    sys.exit(1)

CLASSIFIERS = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 2.7",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS"
]


class CheckPrebuilt(build_ext):
    def run(self):
       for ext in self.extensions:
            build_path = self.get_ext_filename(ext.name)
            output_path = self.get_ext_fullpath(ext.name)
            print("copying %s -> %s" % ( build_path, output_path))
            shutil.copyfile(build_path, output_path)

setup(
    name = 'smurff',
    packages = [ 'smurff' ],
    version = '@SMURFF_VERSION_CLEAN@',
    url = "http://github.com/ExaScience/smurff",
    ext_modules=[Extension('smurff/wrapper', [ 'smurff/wrapper.cpp' ])],
    cmdclass=dict(build_ext=CheckPrebuilt),
    zip_safe = False,
    license = "MIT",
    description = 'Bayesian Factorization Methods',
    long_description = 'Highly optimized and parallelized methods for Bayesian Factorization, including BPMF and smurff. The package uses optimized OpenMP/C++ code with a Cython wrapper to factorize large scale matrices. smurff method provides also the ability to incorporate high-dimensional side information to the factorization.',
    author = "Tom Vander Aa",
    author_email = "Tom.VanderAa@imec.be",
    classifiers = CLASSIFIERS,
    keywords = "bayesian factorization machine-learning high-dimensional side-information",
    install_requires = ['numpy', 'scipy', 'pandas', 'scikit-learn', 'matrix_io']
)
