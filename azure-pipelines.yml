jobs:

- job: 'Ubuntu_1604_Apt'
  pool:
    vmImage: 'Ubuntu 16.04'

  strategy:
    maxParallel: 2
    matrix:
      Debug:
        build.type: 'Debug'
      Release:
        build.type: 'Release'

  steps:
    - script: |
        sudo add-apt-repository ppa:lkoppel/robotics
        sudo apt-get update
        sudo apt-get install -y ninja-build libblas-dev liblapack-dev liblapacke-dev libboost-all-dev libopenmpi-dev libeigen3-dev
      displayName: Apt install dependencies
    - script: |
        mkdir build.$(build.type)
      displayName: Make Build Directory
    - task: CMake@1
      inputs:
        workingDirectory: 'build.$(build.type)'
        cmakeArgs: '-G Ninja -DCMAKE_BUILD_TYPE=$(build.type) ../lib/smurff-cpp/cmake -DENABLE_PYTHON=OFF -DENABLE_BOOST_RANDOM=ON'
    - script: |
        cd build.$(build.type)
        ninja
      displayName: 'Run ninja'
    - script: |
        cd build.$(build.type)/$(build.type)
        OMP_NUM_THREADS=1 ./tests
      displayName: 'Run tests'

- job: 'Conda_Linux'
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
    - template: ci/conda-steps.yml

- job: 'Conda_macOS'
  pool:
    vmImage: 'macOS-10.13'
  variables:
    macOS_sdk_url: 'https://github.com/tvandera/MacOSX_SDKs/releases/download/v10.11.0.1/MacOSX10.9.sdk.tar.gz'
    macOS_sdk_filename: '$(Agent.TempDirectory)/MacOSX10.9.sdk.tar.gz'
  steps:
  - script: |
      curl -L -o $(macOS_sdk_filename) $(macOS_sdk_url)
      sudo mkdir -p /opt
      sudo tar -xzvf $(macOS_sdk_filename) -C /opt
    displayName: 'Install MacOSX10.9.sdk'
  - template: ci/conda-steps.yml

- job: 'Conda_Windows'
  variables:
    CONDA: '$(Agent.WorkFolder)/MiniConda'
  pool:
    vmImage: 'vs2015-win2012r2'
  steps:
    - powershell: ci/install-miniconda.ps1 -destination $(CONDA)
    - template: ci/conda-steps.yml
