MPICXX=mpicxx
CXX=g++
CXXFLAGS+=-std=c++11 -Wall -Wno-unknown-pragmas  -fPIC
#CXXFLAGS+=-fopenmp

CXXFLAGS += -I$(ROOT)/../eigen3 -I$(ROOT)/../libfastsparse
CXXFLAGS += -DSMURFF_VERSION=\"$(shell git describe)\"
LDFLAGS := $(LIBLOCS) -lm -lopenblas -lpthread

#CXXFLAGS+=-O0 -g
#CXXFLAGS+=-O3 -ffast-math -g -fstrict-aliasing -DNDEBUG -march=native -flto
#CXXFLAGS+=-O3 -ffast-math -g -fstrict-aliasing -flto
#CXXFLAGS+=-O1 -g

LINK.o=$(CXX) $(CXXFLAGS) $(LDFLAGS)
OUTPUT_OPTION=-MMD -MP -o $@

.PHONY: all clean 

LIBOBJS = mvnormal.o chol.o linop.o noisemodels.o session.o gen_random.o model.o result.o
LIBOBJS += matrix_io.o macauoneprior.o spikeandslab.o macauprior.o normalprior.o data.o
LIBOBJS += ini.o INIReader.o
LIBOBJS += counters.o
LIBSMURFF = libsmurff-cpp.a

all: tests smurff $(LIBSMURFF)

vpath %.cpp $(ROOT)
vpath %.c $(ROOT)
$(LIBSMURFF): $(LIBOBJS)
	ar -rcs $(LIBSMURFF) $(LIBOBJS)

smurff: $(LIBSMURFF) cmd_session.o

tests: $(LIBSMURFF)

mpi_smurff: mpi_smurff.cpp cmd_session.o $(LIBSMURFF)
	$(MPICXX) $(CXXFLAGS) $(OUTPUT_OPTIONS) $(LDFLAGS) $? -o mpi_smurff

clean:
	rm -f *.o *.d *.a *.csv *.ini
	rm -rf *.dSYM
	rm -f mpi_smurff tests libsmurff.a smurff
 
# DFILES 
DFILES=$(wildcard *.d)

-include $(DFILES)
