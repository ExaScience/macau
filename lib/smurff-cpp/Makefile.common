MPICXX=mpicxx
CXX=g++
CXXFLAGS+=-std=c++11 -Wall -Wno-unknown-pragmas -Wnon-virtual-dtor -fPIC

INCLUDES=-I$(ROOT)/ -I$(ROOT)/../eigen3 -I$(ROOT)/SmurffCpp
CXXFLAGS+=-DSMURFF_VERSION=\"$(shell git describe)\"
LDFLAGS:=$(LIBLOCS) -lm -lopenblas -lpthread

#CXXFLAGS+=-O0 -g
#CXXFLAGS+=-O3 -ffast-math -g -fstrict-aliasing -DNDEBUG -march=native -flto
#CXXFLAGS+=-O3 -ffast-math -g -fstrict-aliasing -flto
#CXXFLAGS+=-O1 -g

LINK.o=$(CXX) $(CXXFLAGS) $(LDFLAGS)
OUTPUT_OPTION=-MMD -MP -o $@

LIBOBJS = InvNormCdf.o TruncNorm.o Distribution.o chol.o linop.o model.o result.o MatrixIO.o TensorIO.o MatrixUtils.o
LIBOBJS += BaseSession.o Session.o Config.o
LIBOBJS += AdaptiveGaussianNoise.o FixedGaussianNoise.o ProbitNoise.o Noiseless.o UnusedNoise.o
LIBOBJS += SparseDoubleFeat.o SparseFeat.o
LIBOBJS += GlobalPrior.o ILatentPrior.o NormalPrior.o SpikeAndSlabPrior.o MacauPrior.o
LIBOBJS += ini.o INIReader.o
LIBOBJS += counters.o
LIBOBJS += MatrixConfig.o TensorConfig.o NoiseConfig.o MatrixDataFactory.o
LIBOBJS += Data.o MatrixData.o MatricesData.o MatrixDataTempl.o ScarceMatrixData.o ScarceBinaryMatrixData.o DenseMatrixData.o SparseMatrixData.o
LIBSMURFF = libsmurff-cpp.a

TESTOBJS = TestsMatrixIO.o TestsTensorIO.o TestsMatrixConfig.o TestsTensorConfig.o TestsCentring.o TestsPVec.o TestsTensor.o

.PHONY: all clean smurff mpi_smurff tests bench_nrandn bench_wishart bench_mvnormal

all: smurff tests

clean:
	rm -f *.o *.d *.a *.csv *.ini *.sbm *.sdm *.ddm *.ddt *.mtx
	rm -rf *.dSYM
	rm -f smurff mpi_smurff tests bench_nrandn bench_wishart bench_mvnormal

smurff: $(LIBSMURFF) CmdSession.o
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(ROOT)/Smurff/smurff.cpp $(LIBSMURFF) $(LDFLAGS) CmdSession.o $(OUTPUT_OPTION)

mpi_smurff: $(ROOT)/SmurffMPI/mpi_smurff.cpp MPISession.o $(LIBSMURFF)
	$(MPICXX) $(CXXFLAGS) $(OUTPUT_OPTIONS) $(LDFLAGS) $? -o mpi_smurff

tests: $(LIBSMURFF) $(TESTOBJS)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(ROOT)/Tests/tests.cpp $(TESTOBJS) $(LIBSMURFF) $(LDFLAGS) $(OUTPUT_OPTION)

bench_nrandn:
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(ROOT)/BenchNrandn/bench_nrandn.cpp $(LIBSMURFF) $(LDFLAGS) $(OUTPUT_OPTION)

bench_wishart:
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(ROOT)/BenchWishart/bench_wishart.cpp $(LIBSMURFF) $(LDFLAGS) $(OUTPUT_OPTION)

bench_mvnormal:
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(ROOT)/BenchMvnormal/bench_mvnormal.cpp $(LIBSMURFF) $(LDFLAGS) $(OUTPUT_OPTION)

$(LIBSMURFF): $(LIBOBJS)
	rm -f $(LIBSMURFF)
	ar -rcs $(LIBSMURFF) $(LIBOBJS)

%.o : $(ROOT)/SmurffCpp/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/Noises/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/Priors/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/Sessions/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/DataMatrices/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/Configs/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/Tests/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/IO/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/IO/%.c
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffCpp/Utils/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/Smurff/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/SmurffMPI/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

%.o : $(ROOT)/Tests/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)

# DFILES
DFILES=$(wildcard *.d)

-include $(DFILES)

